{"version":3,"sources":["components/Note.js","components/NotesList.js","components/NoteForm.js","components/MainNote.js","App.js","reportWebVitals.js","index.js"],"names":["Note","createdAt","activities","id","initialTitle","initialText","removeNote","setMainContent","updateNote","updatedAt","key","useState","title","text","activitiesList","Date","getDate","getMonth","forEach","activity","push","style","zIndex","className","onClick","spellCheck","NotesList","notes","color","maxWidth","minWidth","map","note","_id","NoteForm","addNote","addActivity","setAddActivity","setTitle","setText","setActivity","setActivities","k","onSubmit","e","preventDefault","htmlFor","type","value","onChange","target","rows","wordWrap","newActivities","z","i","split","splitHtml","parentNode","innerHTML","console","log","handleDeleteActivity","display","data-tip","data-for","place","effect","marginBottom","MainNote","mainContent","sideBarOn","App","setNotes","setSideBarOn","addNoteOn","setAddNoteOn","useEffect","axios","get","then","res","data","toDoList","handleNoteListClick","prevState","handleAddNoteBtn","delete","newNotes","filter","updatedNote","put","post","transition","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dfe7a19.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nconst Note = ({ createdAt, activities, id, initialTitle, initialText, removeNote, updateNote, updatedAt, setMainContent, key}) => {\r\n\r\n  // note title state\r\n  const [title, setTitle] = useState(initialTitle);\r\n  // note text state\r\n  const [text, setText] = useState(initialText);\r\n\r\n/*\r\n  //no se va a editar desde aca\r\n  //const [editable, setEditable] = useState(false);\r\n  // handlers\r\n  // save handler\r\n  const handleSave = () => {\r\n      updateNote(id, title, text);\r\n      setEditable(!editable);\r\n  };\r\n//TODO:Put edit function in the mainNote\r\n*/\r\n\r\n//TODO: limit date system \r\nlet today = (new Date(createdAt).getDate() + 1)+ \"/\" +  (new Date(createdAt).getMonth()+ 1)  \r\n\r\n//Acitvities list for the render\r\nlet activitiesList = []\r\nif (activities) {\r\n  activities.forEach(activity =>{\r\n    if (activity.title) {\r\n      activitiesList.push(activity.title)\r\n    }else{//inessesarie line\r\n      activitiesList.push(activity)\r\n    }\r\n  }) \r\n}\r\nconst handleCardClick = ()=>{\r\n  setMainContent([text, title, activitiesList])\r\n};\r\n\r\n  // render \r\n  return (\r\n    <div style={{zIndex:0}} className=\"note card col-10\" key={key}>\r\n      <div className=\"card-body\" onClick={handleCardClick} >\r\n        <h2 className={\"noteTitle\"} spellCheck={false}\r\n          //edit funtion => disabled={!editable}\r\n          //edit funtion => onChange={(e) => setTitle(e.target.value)}\r\n        >{title}\r\n        </h2>\r\n        <br />\r\n        <button style={{zIndex:2}} className=\"btn\" onClick={() => {setMainContent(false); removeNote(id);}}>\r\n          <i className=\"text-danger fa fa-trash fa-lg\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;","import React from 'react';\r\nimport Note from './Note';\r\n\r\nconst NotesList = ({ notes, removeNote, updateNote, setMainContent}) => {\r\n  // render JSX\r\n//{new Date().getDate() + \"/\" +  (new Date().getMonth() + 1)}\r\n  return (\r\n    <div   className = \" gap-2 p-1 d-flex justify-content-center flex-column align-items-center\" >\r\n      <h2 style={{color:'white', maxWidth:300 + 'px', minWidth:300 + 'px'}}>Groups</h2>\r\n\r\n      {notes.map((note)=>(\r\n          \r\n              <Note \r\n              createdAt={note.createdAt}\r\n              setMainContent={setMainContent}\r\n              id={note._id}\r\n              key={note._id}\r\n              initialTitle={note.title}\r\n              initialText={note.text}\r\n              removeNote={removeNote}\r\n              updateNote={updateNote}\r\n              updatedAt={note.createdAt}\r\n              activities={note.activities[0] ? note.activities : \"\"}\r\n              />\r\n      ))}\r\n\r\n    </div>\r\n  );\r\n};\r\n/*\r\n         <div className='d-flex flex-column w-100 justify-content-center align-items-center'>\r\n          <h2 style={{color:'grey'}}>13/06</h2> \r\n          <Note \r\n          setMain={setMain}\r\n          id={note._id}\r\n          key={note._id}\r\n          initialTitle={note.title}\r\n          initialText={note.text}\r\n          removeNote={removeNote}\r\n          updateNote={updateNote}\r\n          updatedAt={note.createdAt}\r\n          />\r\n          </div>\r\n*/ \r\nexport default NotesList;","import React, { useState } from 'react';\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst NoteForm = ({ addNote, addActivity, setAddActivity }) => {\r\n\r\n  // state hooks para el form\r\n  const [title, setTitle] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [activity, setActivity] = useState(''); \r\n  const [activities, setActivities] = useState([]);\r\n  // handler para el submit\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    addNote({title, text, activities:activities});\r\n    // blanquear formulario\r\n    setTitle(''); \r\n    setText('');\r\n    setActivities([ ])\r\n    setActivity(' ')\r\n  };\r\n\r\n  const addActivityHandle = () =>{\r\n    setAddActivity(!addActivity)\r\n  }\r\n  \r\n  const checkActivityHandle = () =>{\r\n    setActivities([...activities, activity])\r\n    setActivity('')\r\n    setAddActivity(!addActivity)\r\n  }\r\n  \r\n  const resetActivityHandle = () =>{\r\n    setAddActivity(!addActivity)\r\n  };\r\n\r\n  const splitHtml = (text) => {\r\n    let textArray =  text.split(\"<\")\r\n    return textArray[0]\r\n  }\r\n\r\n  const handleDeleteActivity = (e) =>{\r\n    let newActivities = [ ]\r\n    let z = true;\r\n    activities.forEach(i=>{\r\n      if (i !== splitHtml(e.target.parentNode.innerHTML)) {\r\n        newActivities.push(i)\r\n      }else{\r\n        if(!z){\r\n          newActivities.push(i)\r\n        }else{\r\n          z = false\r\n        }\r\n      }\r\n    });\r\n    setActivities(newActivities)\r\n    console.log(e.target.parentNode.innerHTML)\r\n    \r\n  }\r\n  let k = 0;\r\n  // render JSX\r\n  return (\r\n    <form  className=\"noteForm\" onSubmit={handleSubmit}  >\r\n      <div className=\"form-group \">\r\n        <h2 htmlFor=\"title\">Create New Group</h2>\r\n        <label htmlFor=\"title\">Group Name</label>\r\n        <input\r\n          id=\"title\"\r\n          className=\"form-control\"\r\n          type='text'\r\n          value={title}\r\n          onChange={e => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-group mb-3\">\r\n        <label htmlFor=\"text\">Description</label>\r\n        <textarea\r\n          id=\"text\"\r\n          className=\"form-control\"\r\n          value={text}\r\n          rows=\"4\"\r\n          onChange={e => setText(e.target.value)}\r\n        >\r\n        </textarea>\r\n      </div>\r\n\r\n      <ul className=\"list-group my-2\">\r\n      {activities.map((e)=>(\r\n          <div style={{wordWrap:'break-word'}} className=\"list-group-item d-flex flex-row align-items justify-content-between\">\r\n            <li key={k++} className=\"overflow-auto \"> \r\n            {e} \r\n            </li>\r\n            <i onClick={(e) => handleDeleteActivity(e)} className=\"mx-1 deleteActivityBtn fa fa-minus-square \"/>\r\n          </div>\r\n      ))}\r\n\r\n      </ul>\r\n\r\n\r\n      \r\n      <div  className=\"d-flex align-items-center\">\r\n        <input\r\n            style={addActivity ? {} : {display:'none'}}\r\n            id=\"title\"\r\n            className=\"form-control w-75\"\r\n            type='text'\r\n            value={activity}\r\n            onChange={e => setActivity(e.target.value)}\r\n          />\r\n      <div style={addActivity ? {} : {display:'none'}} className=\"addActivityBtnContainer\">\r\n      <i onClick={checkActivityHandle}  className=\"fa fa-check-square mx-1\"></i>\r\n      </div >\r\n      <div style={addActivity ? {} : {display:'none'}} className=\"addActivityBtnContainer\">\r\n      <i onClick={resetActivityHandle}  className=\"fa fa-minus-square mx-1\"></i>\r\n      </div>\r\n       \r\n        \r\n      </div>\r\n      <div style={addActivity ? {display:'none'} : {}} className=\"addActivityBtn\" >\r\n      <i onClick={addActivityHandle}   data-tip data-for={\"registerTip\"} className=\" fa fa-plus-square\" ></i>\r\n      </div>\r\n      <ReactTooltip id=\"registerTip\"  className=\"addActivityTooltip p-1\" place=\"right\" effect=\"solid\">\r\n        Add Activity\r\n      </ReactTooltip>\r\n      <input\r\n        style={{marginBottom:'10px'}}\r\n        className=\"btn btn-primary mt-3\"\r\n        type=\"submit\"\r\n        value=\"Guardar\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NoteForm;","\r\n\r\nconst MainNote = ( {mainContent , setMainContent, sideBarOn} )=>{\r\n    return (\r\n    <div className={sideBarOn ? 'overflow-hidden w-100 mainNoteOff' : 'overflow-hidden w-100 mainNoteOn'}>\r\n        {!mainContent \r\n        ? <h2 className='anyGroup'>Any Group Selected</h2>  \r\n        :\r\n        <main className='mainNote'>\r\n            <h3 className=\"card overflow-hidden w-75\" >\r\n                {mainContent[1]} \r\n            </h3>\r\n            <div className='mainNoteContent'>\r\n                <ul className=\" mainNoteContentList list-group\"> \r\n                {mainContent[2].map(activity=>(\r\n                    <li  className=\"list-group-item \"> \r\n                        <p className=' activity'>{activity}</p>\r\n                    </li>\r\n                ))} \r\n                </ul>\r\n            </div>\r\n            <button onClick={() => setMainContent(false)} style={!mainContent ? {display:\"none\"} : {}} className='mainBtn btn btn-danger' >\r\n            Close Group\r\n            </button>\r\n        </main>\r\n        }\r\n\r\n    </div>\r\n)}\r\n\r\n\r\nexport default MainNote","// imports\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n//import Header from './Header';\nimport NotesList from './components/NotesList';\nimport NoteForm from './components/NoteForm';\n//import Footer from './Footer';\nimport './App.css'\nimport MainNote from './components/MainNote';\n\n\nconst App = () => {\n  // useStates for the NoteList and The MainContent\n  const [notes, setNotes] = useState([]);\n  const [mainContent, setMainContent] = useState(false) \n\n  // useStates for bars and btn´s\n  const [sideBarOn, setSideBarOn] = useState([true])\n  const [addNoteOn, setAddNoteOn] = useState([true])\n  const [addActivity, setAddActivity] = useState(false)\n  \n  // useEffect hook\n  useEffect(() => {\n    axios.get('/api/todolist')\n      .then(res => {\n        setNotes(res.data.toDoList);\n      });\n    \n  }, []);\n\n  // CRUD functions\n  // create\n  const addNote = note => {\n    axios.post('/api/todolist', note)\n      .then(res => {\n        const newNotes = [ res.data,...notes];\n        setNotes(newNotes);\n      });\n  };\n\n  // edit\n  const updateNote = (id, title, text) => {\n    const updatedNote = {\n      title: title,\n      text: text\n    };\n    axios.put('/api/todolist/' + id, updatedNote)\n      .then(res => {\n        const newNotes = notes.map(note =>\n          note.id === id ? updatedNote : note\n        );\n        setNotes(newNotes);\n      });\n  };\n    \n/*\nTODO:Edits activities in a To Do Note\n    const updateActivities = (id, title, text, activities) => {\n      const updatedNote = {\n        title: title,\n        text: text,\n        activities: activities\n      };\n      axios.put('/api/todolist/' + id, updatedNote)\n        .then(res => {\n          const newNotes = notes.map(note =>\n            note.id === id ? updatedNote : note\n          );\n          setNotes(newNotes);\n        });\n    };\n*/\n  \n\n  // remove\n  const removeNote = (id) => {\n      axios.delete('/api/todolist/' + id)\n      .then(res => {\n        const newNotes = notes.filter(note => note._id !== id);\n        setNotes(newNotes);\n    });\n  };\n\n  // Handle clock from open the note list bar\n  const handleNoteListClick = ()=>{\n    setSideBarOn(prevState =>(!prevState))\n    if(!addNoteOn){\n      handleAddNoteBtn()\n    }\n\n  }\n  const handleAddNoteBtn = () =>{\n    setAddNoteOn(prevState =>(!prevState))\n    if(addActivity){\n      setAddActivity(prevState =>(!prevState))\n    }\n    if(sideBarOn){\n      handleNoteListClick()\n    }\n  }\n  return (\n    <div>\n      <main className=\"d-flex overflow-hidden flex-row\">\n          <div  className={sideBarOn ? \"noteListContainerOff\" : \"noteListContainerOn\" }>\n                  <NotesList \n                  notes={notes} \n                  removeNote={removeNote} \n                  updateNote={updateNote} \n                  setMainContent={setMainContent} \n                  />  \n          </div>\n          <div  \n                className= {addNoteOn ? \"noteFormContainerOff\" : \"noteFormContainerOn\"}>\n                  <NoteForm \n                  addActivity={addActivity}\n                  setAddActivity={setAddActivity} \n                  addNote={addNote} \n                  />\n          </div>\n          <div>\n            <button onClick={handleAddNoteBtn} type=\"button\" className=\"addNoteBtn mt-1\" \n            style={addNoteOn ? {} : {color:\"red\"}}  >\n            <i  className=\"fa fa-plus-square\" style={addNoteOn ? {transition:'.9s'} : {transition:'.9s', transform:\"rotate(45deg)\"}}></i>\n            </button>\n            <button type=\"button\" className=\"sideBarBtn \" onClick={handleNoteListClick} style={{transition:\"2s\"}}>\n            <i style={sideBarOn ? {transition:\".8s\"}: {transition:\".8s\", transform:\"rotate(180deg)\"}} \n            className=\"fa fa-chevron-right\"></i>\n            </button>\n          </div>\n            <MainNote sideBarOn={sideBarOn}  mainContent={mainContent} setMainContent={setMainContent} />\n      </main>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n      <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}