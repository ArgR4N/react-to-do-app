{"version":3,"sources":["components/Note.js","components/NotesList.js","components/NewActivity.js","components/NoteForm.js","components/Activity.js","components/MainNote.js","App.js","reportWebVitals.js","index.js"],"names":["Note","setSideBarOn","mainContent","setEditing","setActualText","createdAt","activities","id","title","setMainContent","removeNote","updateNote","updatedAt","activitiesList","length","forEach","activity","push","style","zIndex","className","onClick","newMainContent","window","screen","width","prevState","spellCheck","NotesList","setAddNoteOn","notes","color","maxWidth","minWidth","overflow","height","map","note","_id","type","NewActivity","handleDeleteActivity","text","dateFor","margin","disabled","name","value","NoteForm","today","addNote","addActivity","setAddActivity","useState","setTitle","setActivity","setActivities","formError","setFormError","e","newActivities","i","onSubmit","preventDefault","console","log","htmlFor","onChange","target","indexOf","display","min","max","data-tip","data-for","place","effect","textAlign","fontSize","Activity","deleteActivity","initailDate","separateDate","split","finalDate","splice","join","dateFormatFunction","timeDifference","Date","parse","Math","floor","dateState","MainNote","uploadGroup","editing","newText","setNewText","newActivity","setNewActivity","editingToggle","handleUpload","newList","handleAddActivity","concat","useEffect","toLocaleDateString","alignItems","marginTop","flexWrap","gap","justifyContent","App","setNotes","sideBarOn","addNoteOn","axios","get","then","res","data","toDoList","date","todayArray","formatDate","delete","newNotes","filter","handleNoteListClick","handleAddNoteBtn","updatedNote","put","post","transition","transform","newTitle","newGroup","group","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fceb3e90.chunk.js","sourcesContent":["const Note = ({setSideBarOn, mainContent, setActualText, setEditing, createdAt, activities, id, title,  removeNote, updateNote, updatedAt, setMainContent}) => {\r\n\r\n\r\n//TODO:Put edit function in the mainNote\r\n\r\n//TODO: limit date system \r\n//let today = (new Date(createdAt).getDate() + 1)+ \"/\" +  (new Date(createdAt).getMonth()+ 1)  \r\n\r\n//Acitvities list for the render\r\nlet activitiesList = []\r\nif (activities.length) {\r\n  activities.forEach(activity =>{\r\n    activitiesList.push(activity);\r\n  }) \r\n}\r\nconst handleCardClick = ()=>{\r\n  let newMainContent = [createdAt, title, activitiesList, id]\r\n  if (newMainContent[3] !== mainContent[3]) {\r\n    setMainContent(newMainContent)\r\n    if (window.screen.width < 700) {\r\n      setSideBarOn(prevState => !prevState)\r\n    }\r\n  }\r\n  setEditing(true)\r\n};\r\n\r\n  // render \r\n  return (\r\n    <div style={{zIndex:0}} className=\"note card col-10\">\r\n      <div className=\"card-body\" onClick={handleCardClick} >\r\n        <h2 className={\"noteTitle\"} spellCheck={false}\r\n          //edit funtion => disabled={!editable}\r\n          //edit funtion => onChange={(e) => setTitle(e.target.value)}\r\n        >{title}\r\n        </h2>\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;","import React from 'react';\r\nimport Note from './Note';\r\n\r\nconst NotesList = ({setSideBarOn, setAddNoteOn, mainContent, setEditing, notes, removeNote, updateNote, setMainContent}) => {\r\n  // render JSX\r\n\r\n  return (\r\n    <div   className = \"d-flex justify-content-center flex-column align-items-center\" >\r\n      <h2 onClick={window.screen.width > 500 ? null : ()=>setSideBarOn(prevState => !prevState)} className='groupsTitle' style={{color:'white', maxWidth:300 + 'px', minWidth:300 + 'px'}}>Groups</h2>\r\n\r\n      <div style={window.screen.width > 500 ? {} : {overflow:'scroll' ,height:'80vh'}} className=' w-100 gap-2 p-1 d-flex  flex-column align-items-center'>\r\n      {notes.map((note)=>(\r\n              <Note \r\n              key={note._id}\r\n              createdAt={note.createdAt}\r\n              setMainContent={setMainContent}\r\n              id={note._id}\r\n              title={note.title}\r\n              removeNote={removeNote}\r\n              updatedAt={note.createdAt}\r\n              activities={note.activities ? note.activities : null }\r\n              setEditing={setEditing}\r\n              mainContent={mainContent}\r\n              setSideBarOn={setSideBarOn}\r\n              />\r\n      ))}\r\n            {notes.length < 3 || window.screen.width < 700\r\n      ? <button  onClick={()=>setAddNoteOn(false)}  type=\"button\" className=\"addFirstGroupBtn \">Add Group</button>\r\n      : null\r\n      }\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n/*\r\n         <div className='d-flex flex-column w-100 justify-content-center align-items-center'>\r\n          <h2 style={{color:'grey'}}>13/06</h2> \r\n          <Note \r\n          setMain={setMain}\r\n          id={note._id}\r\n          key={note._id}\r\n          initialTitle={note.title}\r\n          initialText={note.text}\r\n          removeNote={removeNote}\r\n          updateNote={updateNote}\r\n          updatedAt={note.createdAt}\r\n          />\r\n          </div>\r\n*/ \r\nexport default NotesList;","const NewActivity = ({handleDeleteActivity, activity}) =>{  \r\n    const [text, dateFor ]= activity\r\n    return (\r\n        <li className='d-flex align-items-center justify-content-between list-group-item'>\r\n            <div style={{maxWidth:'100px', overflow:'auto'}} className='mx-1'><p style={{margin:'0'}}>{text}</p></div>\r\n            <input disabled className='mx-1' style={{minWidth:'135px', maxWidth:'135px'}} type=\"date\" id=\"start\" name=\"trip-start\"\r\n            value={dateFor}>\r\n            </input>\r\n            <button onClick={()=>{handleDeleteActivity(activity)}} type='button' className='removeActivity'>\r\n                <i className='fa fa-minus-square'></i>\r\n            </button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default NewActivity;","import React, { useState } from 'react';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport NewActivity from './NewActivity.js';\r\nconst NoteForm = ({today, setAddNoteOn, addNote, addActivity, setAddActivity }) => {\r\n\r\n  // state hooks para el form\r\n  const [title, setTitle] = useState('');\r\n  const [activity, setActivity] = useState([' ', today]); \r\n  const [activities, setActivities] = useState([]);\r\n  const [formError, setFormError] = useState()\r\n  // handler para el submit\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if(title === ''){\r\n      setFormError('The group need a name!')\r\n      return null;\r\n    }else{\r\n      if(window.screen.width < 700) {\r\n        setAddNoteOn(prevState => !prevState)\r\n      } \r\n      addNote({title, activities:activities});\r\n      // blanquear formulario\r\n      setFormError('')\r\n      setTitle(''); \r\n      setActivities([ ])\r\n      console.log(today);\r\n      setActivity([' ', today])\r\n    }\r\n  };\r\n  \r\n  const addActivityHandle = () =>{\r\n    setAddActivity(!addActivity)\r\n  }\r\n  \r\n  const checkActivityHandle = () =>{\r\n    if(activity[0] === ''){\r\n      setFormError('The activity needs information!')\r\n      return null;\r\n    }else{\r\n      setFormError('')\r\n      setActivities([...activities, activity])\r\n      setActivity( [' ', today])\r\n      setAddActivity(!addActivity)\r\n    }\r\n\r\n  }\r\n  \r\n  const resetActivityHandle = () =>{\r\n    setActivity(['',today])\r\n    setAddActivity(!addActivity)\r\n  };\r\n\r\n\r\n\r\n  const handleDeleteActivity = (e) =>{\r\n    let newActivities = [ ]\r\n    activities.forEach(i=>{\r\n      if (i !== e) {\r\n        newActivities.push(i)\r\n      }else{\r\n        return null;\r\n      }\r\n    });\r\n    setActivities(newActivities)\r\n  }\r\n\r\n  // render JSX\r\n  return (\r\n    <form  className=\" noteForm\" onSubmit={handleSubmit}  >\r\n      <div className=\"form-group \">\r\n        <h2 htmlFor=\"title\">Create New Group</h2>\r\n        <label htmlFor=\"title\">Group Name</label>\r\n        <input\r\n          id=\"title\"\r\n          className=\"w form-control\"\r\n          type='text'\r\n          value={title}\r\n          onChange={e => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <ul className=\"list-group my-2\">\r\n      {activities.map((e)=>(\r\n          <NewActivity\r\n          key={activities.indexOf(e)}\r\n          activity={e}\r\n          handleDeleteActivity={handleDeleteActivity}\r\n          />\r\n      ))}\r\n\r\n      </ul>\r\n\r\n\r\n      \r\n      <div  className=\"flex-wrap gap-1 d-flex align-items-center\">\r\n        <input\r\n            style={addActivity ? {} : {display:'none'}}\r\n            id=\"activityTitle\"\r\n            className=\"form-control w-75\"\r\n            type='text'\r\n            value={activity[0]}\r\n            onChange={e => setActivity([e.target.value, activity[1]])}\r\n          />\r\n            <input  style={addActivity ? {minWidth:'135px', maxWidth:'135px'} : {display:'none'}} className='mx-1' type=\"date\" id=\"start\" name=\"trip-start\"\r\n            value={activity[1]}\r\n            onChange={e=>setActivity([activity[0], e.target.value])}\r\n            min=\"2005-15-03\" max=\"2025-12-31\">\r\n            </input>\r\n\r\n      <button  onClick={checkActivityHandle}  type='button' style={addActivity ? {} : {display:'none'}} className=\"addActivityBtnContainer\">\r\n        <i className=\"fa fa-check-square mx-1\"></i>\r\n      </button >\r\n      <button onClick={resetActivityHandle} type='button' style={addActivity ? {} : {display:'none'}} className=\"addActivityBtnContainer\">\r\n        <i   className=\"fa fa-minus-square mx-1\"></i>\r\n      </button>\r\n\r\n        \r\n      </div>\r\n      <button onClick={addActivityHandle}  type=\"button\" style={addActivity ? {display:'none'} : {}} className=\"addActivityBtn\" >\r\n        <i  data-tip data-for={\"registerTip\"} className=\" fa fa-plus-square\" ></i>\r\n      </button>\r\n\r\n      <ReactTooltip id=\"registerTip\"  className=\"addActivityTooltip p-1\" place=\"right\" effect=\"solid\">\r\n        Add Activity\r\n      </ReactTooltip>\r\n      \r\n      <h6 style={{textAlign:'center', fontSize:'13px',color:'red', margin:'10px 0 0 0'}}> {formError} </h6>\r\n      <input\r\n        className=\"btn btn-primary mt-3\"\r\n        type=\"submit\"\r\n        value=\"Guardar\"\r\n        \r\n      /> \r\n     <input\r\n        className=\"btn btn-danger mt-3 mx-2\"\r\n        type=\"button\"\r\n        value=\"Cancelar\"\r\n        onClick={() => setAddNoteOn(prevState => !prevState)}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NoteForm;","const Activity = ({deleteActivity, mainContent, activity, today}) =>{\r\n    const {title, _id, dateFor} = activity\r\n    const handleDeleteActivity = () =>{\r\n        deleteActivity(_id)\r\n    }\r\n    const handleCompleteActivity = () =>{\r\n        console.log('in dev');\r\n    }\r\n    const dateFormatFunction = (initailDate) =>{\r\n        let separateDate = initailDate.split('-');\r\n        let finalDate = [];\r\n        separateDate[2] = separateDate[2].split('').splice(0,2).join('')\r\n        for (let i = separateDate.length; i > 0; i--) {\r\n            finalDate.push(separateDate[i - 1])\r\n        }\r\n        return finalDate.join('/')\r\n    }\r\n    const dateState = (dateFor, today)=>{\r\n        let timeDifference = Date.parse(dateFor) - Date.parse(today)\r\n\r\n        if (Date.parse(dateFor) === Date.parse(today)) {\r\n            return <span style={{color:'blue'}}>Is Today!</span>\r\n        }\r\n        if (Date.parse(dateFor) > Date.parse(today)) {\r\n            return <span style={{color:'grey'}}>{Math.floor((timeDifference/86400)/1000)} Days left</span>\r\n        }\r\n        if (Date.parse(dateFor) < Date.parse(today)) {\r\n            return <span style={{color:'red'}}>Is Late!</span>\r\n        }\r\n\r\n        return \r\n    }\r\n    return (\r\n        <li  className=\"list-group-item \"> \r\n        <div className=' activityContainer'>\r\n            <div className='w-50 activityText'>\r\n                <p className=' activity'>{title}</p>\r\n                <p className=' activityDate' >Is for: {dateFormatFunction(dateFor)}</p>\r\n                <p className='activity' ><strong> {dateState(dateFor, today)} </strong></p>\r\n\r\n            </div>\r\n            <div className='activityBtnContainer'>\r\n                <button onClick={handleCompleteActivity}  className=\"addActivityBtnContainer\">\r\n                   <i className=\"fa fa-check-square mx-1\"></i>\r\n                </button > \r\n                <button onClick={handleDeleteActivity} className=\"addActivityBtnContainer\">\r\n                   <i className=\"fa fa-minus-square mx-1\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Activity;","import { main } from '@popperjs/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Activity from './Activity.js'\r\n\r\nconst MainNote = ( {removeNote, uploadGroup, setEditing, editing, mainContent , setMainContent, today} )=>{\r\n    const [newText, setNewText] = useState(mainContent[1]);\r\n    const [newActivity, setNewActivity] = useState({editing:false, text:'', dateFor:today});\r\n    const [formError, setFormError] = useState()\r\n\r\n    useEffect(() => {\r\n        setNewText(mainContent[1])\r\n        setNewActivity({editing:false, text:'', dateFor:today})\r\n    }, [mainContent, today])\r\n\r\n    function editingToggle(){\r\n        setEditing(prevState => !prevState)\r\n        setNewText(mainContent[1])\r\n    }\r\n    function handleUpload(newList){\r\n        uploadGroup(mainContent[3], newText, mainContent[2], newList)\r\n\r\n    }\r\n\r\n    function handleEditing(){\r\n        editingToggle()\r\n        handleUpload(false)\r\n    }\r\n\r\n\r\n\r\n    function handleAddActivity(){\r\n        if (newActivity.editing) {\r\n            if (newActivity.text === '') {\r\n                setFormError('The activity needs information!')\r\n            }else{\r\n                let activity = [newActivity.text, newActivity.dateFor]\r\n                let newList = mainContent[2].concat([activity])\r\n                handleUpload(newList)\r\n                setFormError('')\r\n                setNewActivity(prevState => ({...prevState, editing: false}))\r\n            }\r\n\r\n        }else{\r\n        setNewActivity(prevState => ({...prevState, editing: !prevState.editing}))\r\n\r\n        }\r\n    }\r\n\r\n    function handleChange(e){\r\n        if(!editing){\r\n            setNewText(e.target.value)\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n    function handleDelete(){\r\n        removeNote(mainContent[3])\r\n    }\r\n    const deleteActivity = (_id) =>{\r\n        let newList =[]\r\n        mainContent[2].forEach(activity =>{\r\n            if (activity._id === _id) {\r\n                return null;\r\n            }else{\r\n                newList.push(activity)\r\n            }\r\n        })\r\n        handleUpload(newList)\r\n    }\r\n\r\n    return (\r\n    <div className={  ' mainNoteContainer overflow-hidden w-100 mainNoteOn'}>\r\n        <main className='mainNote'>\r\n            <div className=\"m-2 card overflow-hidden w-100\" >\r\n                <div  style={{fontSize:'25px'}} className='w-100 d-flex  flex-wrap '>\r\n                    <input\r\n                    style={editing ? {display:'none'} : {width:'50%'}}\r\n                    value={newText}\r\n                    onChange={handleChange}\r\n                    />\r\n                    <div className='w-50' style={editing ? {} : {display:'none'}}>\r\n                    <h3 className='m-0'>{mainContent[1]}</h3>\r\n                    </div>\r\n                    <div className='d-flex'>\r\n                        <button onClick={editingToggle}>\r\n                            <i style={editing ? {color:'grey'} : {color:'red'}} className={!editing ? \"fa fa-minus-square\" : \"fa fa-edit\"}></i>\r\n                        </button>\r\n                        <button onClick={handleEditing} style={editing ? {display:'none'} : {}} >\r\n                            <i style={{color:'rgb(0, 255, 0)'}} className=\"fa fa-check-square mx-1\"></i>\r\n                        </button>\r\n                        <button  onClick={handleDelete} style={{fontSize:'18px'}}>\r\n                            <i style={editing ? {} : {display:'none'}} className=\"mx-1 text-danger fa fa-trash fa-lg\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <h6 className=\"mainNoteCreationDate\">\r\n                Created or Edited at: {new Date(mainContent[0]).toLocaleDateString(\"es-AR\")} \r\n                </h6>\r\n            </div>\r\n            <div className=' mainNoteContent'>\r\n                {mainContent[2] && mainContent[2].length !== 0 \r\n                ?                 \r\n                <ul className=\" mainNoteContentList list-group\"> \r\n                    {mainContent[2].map(activity=>(\r\n                            <Activity\r\n                            today={today}\r\n                            key={activity._id}\r\n                            deleteActivity={deleteActivity}\r\n                            mainContent={mainContent}\r\n                            activity={activity}\r\n                            />\r\n                    ))} \r\n                <div  className='d-flex justify-content-center align-items-center'>\r\n                    <h5 style={newActivity.editing ? {display:'none'} : {textAlign:'center', margin:'0', color:'gray'}}>Add Activity</h5>\r\n                    <button onClick={handleAddActivity} style={{ alignItems:'center'}} className='addActivityBtn alig-items-center d-flex justify-content-center'>\r\n                        <i style={newActivity.editing ? {display:'none'} : {}} className='fa fa-plus-square'></i>\r\n                    </button>\r\n                </div>\r\n \r\n                <form onSubmit={e => e.preventDefault()} style={newActivity.editing ? {marginTop:'-35px', display:'flex', flexWrap:'wrap', gap:'5px', justifyContent:'start'} : {display:'none'} }>\r\n                <input value={newActivity.text} type='text'\r\n                        onChange={(e) => setNewActivity(prevState =>({...prevState, text:e.target.value}))}></input>\r\n                        <input value={newActivity.dateFor}  type='date'\r\n                    min=\"2005-15-03\" max=\"2022-12-31\" \r\n                    onChange={(e) => setNewActivity(prevState =>({...prevState, dateFor:e.target.value}))}\r\n                    >\r\n                    </input>\r\n                    <div className='activityBtnContainer'>\r\n\r\n                        <button  onClick={handleAddActivity}  className=\"addActivityBtnContainer\">\r\n                            <i className=\"fa fa-check-square mx-1\"></i>\r\n                        </button > \r\n                        <button onClick={() => setNewActivity(prevState => ({...prevState, editing: !prevState.editing}))} className=\"addActivityBtnContainer\">\r\n                            <i className=\"fa fa-minus-square mx-1\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <h6 style={{color:'red'}}>{formError}</h6>\r\n                </form>\r\n                </ul> \r\n                : \r\n                <ul className='mainNoteContentList list-group overflow-hidden'>\r\n                                    <div style={newActivity.editing ? {display:'none'} : {}} className='d-flex justify-content-center align-items-center'>\r\n                    <h5 style={newActivity.editing ? {display:'none'} : {textAlign:'center', margin:'0', color:'gray'}}>Any Acvtivity</h5>\r\n                    <button onClick={handleAddActivity} style={{ alignItems:'center'}} className='addActivityBtn alig-items-center d-flex justify-content-center'>\r\n                        <i style={newActivity.editing ? {display:'none'} : {}} className='fa fa-plus-square'></i>\r\n                    </button>\r\n                </div>\r\n                 \r\n                <form onSubmit={e => e.preventDefault()} style={newActivity.editing ? {marginTop:'-35px', display:'flex', flexWrap:'wrap', gap:'5px', justifyContent:'start'} : {display:'none'} }>\r\n                <input value={newActivity.text} type='text'\r\n                        onChange={(e) => setNewActivity(prevState =>({...prevState, text:e.target.value}))}></input>\r\n                        <input value={newActivity.dateFor}  type='date'\r\n                    min=\"2005-15-03\" max=\"2022-12-31\" \r\n                    onChange={(e) => setNewActivity(prevState =>({...prevState, dateFor:e.target.value}))}\r\n                    >\r\n                    </input>\r\n                    <div className='activityBtnContainer'>\r\n\r\n                        <button  onClick={handleAddActivity}  className=\"addActivityBtnContainer\">\r\n                            <i className=\"fa fa-check-square mx-1\"></i>\r\n                        </button > \r\n                        <button onClick={() => setNewActivity(prevState => ({...prevState, editing: !prevState.editing}))} className=\"addActivityBtnContainer\">\r\n                            <i className=\"fa fa-minus-square mx-1\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <h6 style={{color:'red'}}>{formError}</h6>\r\n\r\n                </form>\r\n                </ul>\r\n                \r\n                }\r\n\r\n            </div>\r\n            <div>\r\n            </div>\r\n            <button onClick={() => setMainContent(false)} style={!mainContent ? {display:\"none\"} : {}} className='mainBtn btn btn-danger' >\r\n            Close Group\r\n            </button>\r\n            \r\n        </main>\r\n    </div>\r\n)}\r\n\r\n\r\nexport default MainNote","// imports\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactTooltip from 'react-tooltip';\n\n//import Header from './Header';\nimport NotesList from './components/NotesList';\nimport NoteForm from './components/NoteForm';\n//import Footer from './Footer';\nimport './App.css'\nimport MainNote from './components/MainNote';\n\n\nconst App = () => {\n\n  const [editing, setEditing] = useState(true)\n\n\n  // useStates for the NoteList and The MainContent\n  const [notes, setNotes] = useState([]);\n  const [mainContent, setMainContent] = useState(false) \n\n  // useStates for bars and btn´s\n  const [sideBarOn, setSideBarOn] = useState([true])\n  const [addNoteOn, setAddNoteOn] = useState([true])\n  const [addActivity, setAddActivity] = useState(false)\n  \n\n  //\n\n\n\n  // useEffect hook\n  useEffect(() => {\n    axios.get('/api/todolist')\n      .then(res => {\n        setNotes(res.data.toDoList);\n      });\n  }, [mainContent]);\n\n  // CRUD functions\n  // create\n  const addNote = note => {\n    axios.post('/api/todolist', note)\n      .then(res => {\n        const newNotes = [ res.data,...notes];\n        setNotes(newNotes);\n      });\n  };\n\n  // edit\n  const updateNote = (id, title, text) => {\n    const updatedNote = {\n      title: title,\n      text: text\n    };\n    axios.put('/api/todolist/' + id, updatedNote)\n      .then(res => {\n        const newNotes = notes.map(note =>\n          note.id === id ? updatedNote : note\n        );\n        setNotes(newNotes);\n      });\n  };\n    \n/*\nTODO:Edits activities in a To Do Note\n\n*/\n  /*\nconst updateActivities = (id, title, activities) => {\n  const updatedNote = {\n    title: title,\n    activities: activities\n  };\n  axios.put('/api/todolist/' + id, updatedNote)\n    .then(res => {\n      const newNotes = notes.map(note =>\n        note.id === id ? updatedNote : note\n      );\n      setNotes(newNotes);\n    });\n};\n*/\n\nconst formatDate = date =>{\n  let todayArray = date.split('/')\n  let today = [];\n  for (let i = todayArray.length; i > 0 ; i--) {\n    if (todayArray[i-1].split(\"\").length < 2) {\n      today.push(`0${todayArray[i-1]}`)\n    }else{\n      today.push(todayArray[i-1]);\n    }\n  }\n  return today.join('-');\n}\nlet today = formatDate(new Date().toLocaleDateString(\"es-AR\"))\n\n  // remove\n  const removeNote = (id) => {\n      axios.delete('/api/todolist/' + id)\n      .then(res => {\n        const newNotes = notes.filter(note => note._id !== id);\n        setNotes(newNotes);\n        setMainContent(false);\n    });\n    \n  };\n\n  // Handle clock from open the note list bar\n  const handleNoteListClick = ()=>{\n    setSideBarOn(prevState =>(!prevState))\n    if(!addNoteOn){\n      handleAddNoteBtn()\n    }\n\n  }\n  const handleAddNoteBtn = () =>{\n    setAddNoteOn(prevState =>(!prevState))\n    if(addActivity){\n      setAddActivity(prevState =>(!prevState))\n    }\n    if(sideBarOn){\n      handleNoteListClick()\n    }\n  }\n\n  //Update group function\n  const uploadGroup = (id, newTitle, activities, newList) =>{\n    let newGroup = {}\n    if (!newList) {\n      newGroup={\n        title:newTitle,\n        activities\n      }\n    }\n    if(newList){\n      newGroup={\n        title:newTitle,\n        activities:newList\n      }\n    }\n    axios.put(`api/todolist/${id}`, newGroup)\n      .then(res=>{\n        setNotes(prevState => prevState.map(group => group._id === id ? newGroup : group))\n        setMainContent([new Date(), newTitle, !newList ? activities : res.data.activities, id])\n      })\n  }\n  return (\n    <div>\n      <main className=\"d-flex overflow-hidden flex-row\">\n          <div  className={sideBarOn ? \"noteListContainerOff\" : \"noteListContainerOn\" }>\n                  <NotesList \n                  notes={notes} \n                  removeNote={removeNote} \n                  updateNote={updateNote} \n                  setMainContent={setMainContent} \n                  setEditing={setEditing}\n                  mainContent={mainContent}\n                  setAddNoteOn={setAddNoteOn} \n                  setSideBarOn={setSideBarOn}\n                  />  \n          </div>\n          <div  \n                className= {addNoteOn ? \"noteFormContainerOff\" : \"noteFormContainerOn\"}>\n                  <NoteForm \n                  addActivity={addActivity}\n                  setAddActivity={setAddActivity} \n                  addNote={addNote} \n                  setAddNoteOn={setAddNoteOn}\n                  today={today}\n                  />\n          </div>\n          <div>\n            <button onClick={handleAddNoteBtn} type=\"button\" className=\"addNoteBtn mt-1\" \n            style={addNoteOn ? {} : {color:\"red\"}}\n            data-tip data-for={\"a\"}  >\n            <i  className=\"fa fa-plus-square\" style={addNoteOn ? {transition:'.9s'} : {transition:'.9s', transform:\"rotate(45deg)\"}}></i>\n            </button>\n            <ReactTooltip  id=\"a\"  className=\"addActivityTooltip p-1\" place=\"right\" effect=\"solid\">\n              {addNoteOn ? 'Add Group' : 'Cancel'}\n            </ReactTooltip>\n            <button onClick={window.screen.width <= 640 ? null : handleNoteListClick} type=\"button\" className=\"sideBarBtn \"  style={{transition:\"2s\"}}>\n            <i  onClick={window.screen.width <= 640 ? handleNoteListClick : null}\n            className={sideBarOn ? \"sideBarBtnOpen fa fa-chevron-right\" : \"fa fa-chevron-right sideBarIconClose\"}></i>\n            </button>\n          </div>\n          {\n            !mainContent \n            ? \n            <h2 className={'anyGroup overflow-hidden w-100 mainNoteOn'}>Any Group Selected</h2> \n            :\n            <MainNote \n            removeNote={removeNote}\n            setEditing={setEditing} \n            editing={editing} \n            sideBarOn={sideBarOn}  \n            mainContent={mainContent} \n            setMainContent={setMainContent} \n            uploadGroup={uploadGroup}\n            today={today}\n            />\n          }\n      </main>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n      <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}