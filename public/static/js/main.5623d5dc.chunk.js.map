{"version":3,"sources":["components/Note.js","components/NotesList.js","components/NoteForm.js","components/MainNote.js","App.js","reportWebVitals.js","index.js"],"names":["Note","setActualText","setEditing","createdAt","activities","id","initialTitle","initialText","removeNote","setMainContent","updateNote","updatedAt","key","useState","title","activitiesList","forEach","activity","push","style","zIndex","className","onClick","spellCheck","NotesList","notes","color","maxWidth","minWidth","map","note","_id","text","NoteForm","addNote","addActivity","setAddActivity","setTitle","setText","setActivity","setActivities","today","date","todayArray","split","i","length","console","log","formatDate","Date","toLocaleDateString","k","onSubmit","e","preventDefault","htmlFor","type","value","onChange","target","wordWrap","name","min","max","newActivities","z","splitHtml","parentNode","innerHTML","handleDeleteActivity","display","data-tip","data-for","place","effect","marginBottom","MainNote","editing","mainContent","sideBarOn","newText","setNewText","width","prevState","textAlign","margin","App","setNotes","setSideBarOn","addNoteOn","setAddNoteOn","useEffect","axios","get","then","res","data","toDoList","handleNoteListClick","handleAddNoteBtn","delete","newNotes","filter","updatedNote","put","post","transition","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5623d5dc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nconst Note = ({setActualText, setEditing, createdAt, activities, id, initialTitle, initialText, removeNote, updateNote, updatedAt, setMainContent, key}) => {\r\n\r\n  // note title state\r\n  const [title, setTitle] = useState(initialTitle);\r\n  // note text state\r\n  const [text, setText] = useState(initialText);\r\n\r\n/*\r\n  //no se va a editar desde aca\r\n  //const [editable, setEditable] = useState(false);\r\n  // handlers\r\n  // save handler\r\n  const handleSave = () => {\r\n      updateNote(id, title, text);\r\n      setEditable(!editable);\r\n  };\r\n//TODO:Put edit function in the mainNote\r\n*/\r\n\r\n//TODO: limit date system \r\n//let today = (new Date(createdAt).getDate() + 1)+ \"/\" +  (new Date(createdAt).getMonth()+ 1)  \r\n\r\n//Acitvities list for the render\r\nlet activitiesList = []\r\nif (activities) {\r\n  activities.forEach(activity =>{\r\n    if (activity.title) {\r\n      activitiesList.push(activity.title)\r\n    }else{//inessesarie line\r\n      activitiesList.push(activity)\r\n    }\r\n  }) \r\n}\r\nconst handleCardClick = ()=>{\r\n  setMainContent([createdAt, title, activitiesList])\r\n  setEditing(true)\r\n};\r\n\r\n  // render \r\n  return (\r\n    <div style={{zIndex:0}} className=\"note card col-10\" key={key}>\r\n      <div className=\"card-body\" onClick={handleCardClick} >\r\n        <h2 className={\"noteTitle\"} spellCheck={false}\r\n          //edit funtion => disabled={!editable}\r\n          //edit funtion => onChange={(e) => setTitle(e.target.value)}\r\n        >{title}\r\n        </h2>\r\n        <br />\r\n        <button style={{zIndex:2}} className=\"btn\" onClick={() => {setMainContent(false); removeNote(id);}}>\r\n          <i className=\"text-danger fa fa-trash fa-lg\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;","import React from 'react';\r\nimport Note from './Note';\r\n\r\nconst NotesList = ({setActualText, setEditing, notes, removeNote, updateNote, setMainContent}) => {\r\n  // render JSX\r\n//{new Date().getDate() + \"/\" +  (new Date().getMonth() + 1)}\r\n  return (\r\n    <div   className = \" gap-2 p-1 d-flex justify-content-center flex-column align-items-center\" >\r\n      <h2 style={{color:'white', maxWidth:300 + 'px', minWidth:300 + 'px'}}>Groups</h2>\r\n\r\n      {notes.map((note)=>(\r\n          \r\n              <Note \r\n              createdAt={note.createdAt}\r\n              setMainContent={setMainContent}\r\n              id={note._id}\r\n              key={note._id}\r\n              initialTitle={note.title}\r\n              initialText={note.text}\r\n              removeNote={removeNote}\r\n              updateNote={updateNote}\r\n              updatedAt={note.createdAt}\r\n              activities={note.activities[0] ? note.activities : \"\"}\r\n              setEditing={setEditing}\r\n              setActualText={setActualText}\r\n              />\r\n      ))}\r\n\r\n    </div>\r\n  );\r\n};\r\n/*\r\n         <div className='d-flex flex-column w-100 justify-content-center align-items-center'>\r\n          <h2 style={{color:'grey'}}>13/06</h2> \r\n          <Note \r\n          setMain={setMain}\r\n          id={note._id}\r\n          key={note._id}\r\n          initialTitle={note.title}\r\n          initialText={note.text}\r\n          removeNote={removeNote}\r\n          updateNote={updateNote}\r\n          updatedAt={note.createdAt}\r\n          />\r\n          </div>\r\n*/ \r\nexport default NotesList;","import React, { useState } from 'react';\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst NoteForm = ({ addNote, addActivity, setAddActivity }) => {\r\n\r\n  // state hooks para el form\r\n  const [title, setTitle] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [activity, setActivity] = useState(''); \r\n  const [activities, setActivities] = useState([]);\r\n  // handler para el submit\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    addNote({title, text, activities:activities});\r\n    // blanquear formulario\r\n    setTitle(''); \r\n    setText('');\r\n    setActivities([ ])\r\n    setActivity(' ')\r\n  };\r\n\r\n  const addActivityHandle = () =>{\r\n    setAddActivity(!addActivity)\r\n  }\r\n  \r\n  const checkActivityHandle = () =>{\r\n    setActivities([...activities, activity])\r\n    setActivity('')\r\n    setAddActivity(!addActivity)\r\n  }\r\n  \r\n  const resetActivityHandle = () =>{\r\n    setAddActivity(!addActivity)\r\n  };\r\n\r\n  const splitHtml = (text) => {\r\n    let textArray =  text.split(\"<\")\r\n    return textArray[0]\r\n  }\r\n\r\n  const handleDeleteActivity = (e) =>{\r\n    let newActivities = [ ]\r\n    let z = true;\r\n    activities.forEach(i=>{\r\n      if (i !== splitHtml(e.target.parentNode.innerHTML)) {\r\n        newActivities.push(i)\r\n      }else{\r\n        if(!z){\r\n          newActivities.push(i)\r\n        }else{\r\n          z = false\r\n        }\r\n      }\r\n    });\r\n    setActivities(newActivities)\r\n    console.log(e.target.parentNode.innerHTML)\r\n    \r\n  }\r\n  const formatDate =(date)=>{\r\n    let todayArray = date.split('/')\r\n    for (let i = todayArray.length; i > 3; i--){\r\n      console.log(todayArray[i])\r\n    }\r\n    let today = '2021-07-13'\r\n    return today\r\n  }\r\n\r\n  let today = formatDate(new Date().toLocaleDateString(\"es-AR\"))\r\n  let k = 0;\r\n  // render JSX\r\n  return (\r\n    <form  className=\"noteForm\" onSubmit={handleSubmit}  >\r\n      <div className=\"form-group \">\r\n        <h2 htmlFor=\"title\">Create New Group</h2>\r\n        <label htmlFor=\"title\">Group Name</label>\r\n        <input\r\n          id=\"title\"\r\n          className=\"form-control\"\r\n          type='text'\r\n          value={title}\r\n          onChange={e => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <ul className=\"list-group my-2\">\r\n      {activities.map((e)=>(\r\n          <div style={{wordWrap:'break-word'}} className=\"list-group-item d-flex flex-row align-items justify-content-between\">\r\n            <li key={k++} className=\"overflow-auto \"> \r\n            {e} \r\n            </li>\r\n            <input type=\"date\" id=\"start\" name=\"trip-start\"\r\n             value={today}\r\n             min=\"2005-03-15\" max=\"2021-12-31\">\r\n            </input>\r\n            <i onClick={(e) => handleDeleteActivity(e)} className=\"mx-1 deleteActivityBtn fa fa-minus-square \"/>\r\n          </div>\r\n      ))}\r\n\r\n      </ul>\r\n\r\n\r\n      \r\n      <div  className=\"d-flex align-items-center\">\r\n        <input\r\n            style={addActivity ? {} : {display:'none'}}\r\n            id=\"title\"\r\n            className=\"form-control w-75\"\r\n            type='text'\r\n            value={activity}\r\n            onChange={e => setActivity(e.target.value)}\r\n          />\r\n      <button type='button' style={addActivity ? {} : {display:'none'}} className=\"addActivityBtnContainer\">\r\n      <i onClick={checkActivityHandle}  className=\"fa fa-check-square mx-1\"></i>\r\n      </button >\r\n      <button type='button' style={addActivity ? {} : {display:'none'}} className=\"addActivityBtnContainer\">\r\n      <i onClick={resetActivityHandle}  className=\"fa fa-minus-square mx-1\"></i>\r\n      </button>\r\n       \r\n        \r\n      </div>\r\n      <div style={addActivity ? {display:'none'} : {}} className=\"addActivityBtn\" >\r\n      <i onClick={addActivityHandle}   data-tip data-for={\"registerTip\"} className=\" fa fa-plus-square\" ></i>\r\n      </div>\r\n      <ReactTooltip id=\"registerTip\"  className=\"addActivityTooltip p-1\" place=\"right\" effect=\"solid\">\r\n        Add Activity\r\n      </ReactTooltip>\r\n      <input\r\n        style={{marginBottom:'10px'}}\r\n        className=\"btn btn-primary mt-3\"\r\n        type=\"submit\"\r\n        value=\"Guardar\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NoteForm;","import { main } from '@popperjs/core';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst MainNote = ( {setEditing, editing, mainContent , setMainContent, sideBarOn} )=>{\r\n    const [newText, setNewText] = useState(mainContent[1])\r\n    function editingToggle(){\r\n        setEditing(prevState => !prevState)\r\n        setNewText(mainContent[1])\r\n    }\r\n    function handleNewText(){\r\n        \r\n    }\r\n    return (\r\n    <div className={sideBarOn ? 'overflow-hidden w-100 mainNoteOff' : 'overflow-hidden w-100 mainNoteOn'}>\r\n        {!mainContent \r\n        ? <h2 className='anyGroup'>Any Group Selected</h2>  \r\n        :\r\n        <main className='mainNote'>\r\n            <h3 className=\"card overflow-hidden w-75\" >\r\n                <div>\r\n                    <input\r\n                    style={editing ? {display:'none'} : {width:'50%'}}\r\n                    value={newText}\r\n                    onChange={editing ? (e => setNewText(e.value.target)) : null}\r\n                    />\r\n                    <span\r\n                    style={editing ? {} : {display:'none'}}\r\n                    >\r\n                    {mainContent[1]}\r\n                    </span>\r\n                <div>\r\n                    <button onClick={editingToggle}>\r\n                    <i style={{color:'grey'}} className={!editing ? \"fa fa-minus-square\" : \"fa fa-edit\"}></i>\r\n                    </button>\r\n                    <button style={editing ? {display:'none'} : {}} onClick={handleNewText} >\r\n                                <i className=\"fa fa-check-square mx-1\"></i>\r\n                    </button>\r\n                </div>\r\n                </div>\r\n                <h6 className=\"mainNoteCreationDate\">\r\n                {new Date(mainContent[0]).toLocaleDateString(\"es-AR\")} \r\n                </h6>\r\n            </h3>\r\n            <div className='mainNoteContent'>\r\n                {mainContent[2].length !== 0 ?                 \r\n                <ul className=\" mainNoteContentList list-group\"> \r\n                {mainContent[2].map(activity=>(\r\n                    <li  className=\"list-group-item \"> \r\n                        <div className='activityContainer'>\r\n                        <div className='activityText'>\r\n                            <p className=' activity'>{activity}</p>\r\n                            <p className=' activityDate' >13/07/2021</p>\r\n                        </div>\r\n                        <div className='activityBtnContainer'>\r\n                            <button  className=\"addActivityBtnContainer\">\r\n                            <i className=\"fa fa-check-square mx-1\"></i>\r\n                            </button >\r\n                            <button className=\"addActivityBtnContainer\">\r\n                            <i className=\"fa fa-minus-square mx-1\"></i>\r\n                            </button>\r\n                        </div>\r\n                        </div>\r\n\r\n                    </li>\r\n                ))} \r\n                </ul> : <h5 style={{textAlign:'center', margin:'0', color:'gray'}}>Any Acvtivity</h5>}\r\n                \r\n            </div>\r\n            <div>\r\n            </div>\r\n            <button onClick={() => setMainContent(false)} style={!mainContent ? {display:\"none\"} : {}} className='mainBtn btn btn-danger' >\r\n            Close Group\r\n            </button>\r\n            \r\n        </main>\r\n        }\r\n\r\n    </div>\r\n)}\r\n\r\n\r\nexport default MainNote","// imports\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n//import Header from './Header';\nimport NotesList from './components/NotesList';\nimport NoteForm from './components/NoteForm';\n//import Footer from './Footer';\nimport './App.css'\nimport MainNote from './components/MainNote';\n\n\nconst App = () => {\n\n  const [editing, setEditing] = useState(true)\n\n\n  // useStates for the NoteList and The MainContent\n  const [notes, setNotes] = useState([]);\n  const [mainContent, setMainContent] = useState(false) \n\n  // useStates for bars and btn´s\n  const [sideBarOn, setSideBarOn] = useState([true])\n  const [addNoteOn, setAddNoteOn] = useState([true])\n  const [addActivity, setAddActivity] = useState(false)\n  \n\n  //\n  const[actualText, setActualText] = useState(\"hola\")\n\n\n\n  // useEffect hook\n  useEffect(() => {\n    axios.get('/api/todolist')\n      .then(res => {\n        setNotes(res.data.toDoList);\n      });\n    \n  }, []);\n\n  // CRUD functions\n  // create\n  const addNote = note => {\n    axios.post('/api/todolist', note)\n      .then(res => {\n        const newNotes = [ res.data,...notes];\n        setNotes(newNotes);\n      });\n  };\n\n  // edit\n  const updateNote = (id, title, text) => {\n    const updatedNote = {\n      title: title,\n      text: text\n    };\n    axios.put('/api/todolist/' + id, updatedNote)\n      .then(res => {\n        const newNotes = notes.map(note =>\n          note.id === id ? updatedNote : note\n        );\n        setNotes(newNotes);\n      });\n  };\n    \n/*\nTODO:Edits activities in a To Do Note\n    const updateActivities = (id, title, text, activities) => {\n      const updatedNote = {\n        title: title,\n        text: text,\n        activities: activities\n      };\n      axios.put('/api/todolist/' + id, updatedNote)\n        .then(res => {\n          const newNotes = notes.map(note =>\n            note.id === id ? updatedNote : note\n          );\n          setNotes(newNotes);\n        });\n    };\n*/\n  \n\n  // remove\n  const removeNote = (id) => {\n      axios.delete('/api/todolist/' + id)\n      .then(res => {\n        const newNotes = notes.filter(note => note._id !== id);\n        setNotes(newNotes);\n    });\n  };\n\n  // Handle clock from open the note list bar\n  const handleNoteListClick = ()=>{\n    setSideBarOn(prevState =>(!prevState))\n    if(!addNoteOn){\n      handleAddNoteBtn()\n    }\n\n  }\n  const handleAddNoteBtn = () =>{\n    setAddNoteOn(prevState =>(!prevState))\n    if(addActivity){\n      setAddActivity(prevState =>(!prevState))\n    }\n    if(sideBarOn){\n      handleNoteListClick()\n    }\n  }\n  return (\n    <div>\n      <main className=\"d-flex overflow-hidden flex-row\">\n          <div  className={sideBarOn ? \"noteListContainerOff\" : \"noteListContainerOn\" }>\n                  <NotesList \n                  notes={notes} \n                  removeNote={removeNote} \n                  updateNote={updateNote} \n                  setMainContent={setMainContent} \n                  setActualText={setActualText}\n                  setEditing={setEditing}\n                  />  \n          </div>\n          <div  \n                className= {addNoteOn ? \"noteFormContainerOff\" : \"noteFormContainerOn\"}>\n                  <NoteForm \n                  addActivity={addActivity}\n                  setAddActivity={setAddActivity} \n                  addNote={addNote} \n                  />\n          </div>\n          <div>\n            <button onClick={handleAddNoteBtn} type=\"button\" className=\"addNoteBtn mt-1\" \n            style={addNoteOn ? {} : {color:\"red\"}}  >\n            <i  className=\"fa fa-plus-square\" style={addNoteOn ? {transition:'.9s'} : {transition:'.9s', transform:\"rotate(45deg)\"}}></i>\n            </button>\n            <button type=\"button\" className=\"sideBarBtn \" onClick={handleNoteListClick} style={{transition:\"2s\"}}>\n            <i style={sideBarOn ? {transition:\".8s\"}: {transition:\".8s\", transform:\"rotate(180deg)\"}} \n            className=\"fa fa-chevron-right\"></i>\n            </button>\n          </div>\n            <MainNote \n            setEditing={setEditing} \n            editing={editing} \n            sideBarOn={sideBarOn}  \n            mainContent={mainContent} \n            setMainContent={setMainContent} \n            />\n      </main>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n      <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}