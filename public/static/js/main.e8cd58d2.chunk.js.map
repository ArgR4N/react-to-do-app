{"version":3,"sources":["components/Note.js","components/NotesList.js","components/NewActivity.js","components/NoteForm.js","components/MainNote.js","App.js","reportWebVitals.js","index.js"],"names":["Note","setSideBarOn","mainContent","setEditing","setActualText","createdAt","activities","id","title","removeNote","setMainContent","updateNote","updatedAt","activitiesList","forEach","activity","push","style","zIndex","className","onClick","newMainContent","window","screen","width","prevState","spellCheck","NotesList","setAddNoteOn","notes","color","maxWidth","minWidth","map","note","_id","length","type","class","NewActivity","dateFor","setDateFor","handleDeleteActivity","e","today","overflow","margin","name","value","onChange","target","min","max","NoteForm","addNote","addActivity","setAddActivity","date","todayArray","split","i","join","formatDate","Date","toLocaleDateString","useState","setTitle","setActivity","setActivities","formError","setFormError","newActivities","onSubmit","preventDefault","htmlFor","display","data-tip","data-for","place","effect","textAlign","fontSize","marginBottom","MainNote","uploadGroup","editing","sideBarOn","newText","setNewText","setNewActivities","editingToggle","alignItems","App","setNotes","addNoteOn","useEffect","axios","get","then","res","data","toDoList","handleNoteListClick","handleAddNoteBtn","delete","newNotes","filter","text","updatedNote","put","post","transition","transform","newTitle","newGroup","group","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAgDeA,EAhDF,SAAC,GAAkJ,IAAjJC,EAAgJ,EAAhJA,aAAcC,EAAkI,EAAlIA,YAA4BC,GAAsG,EAArHC,cAAqH,EAAtGD,YAAYE,EAA0F,EAA1FA,UAAWC,EAA+E,EAA/EA,WAAYC,EAAmE,EAAnEA,GAAIC,EAA+D,EAA/DA,MAAQC,EAAuD,EAAvDA,WAAmCC,GAAoB,EAA3CC,WAA2C,EAA/BC,UAA+B,EAApBF,gBASvIG,EAAiB,GACjBP,GACFA,EAAWQ,SAAQ,SAAAC,GACbA,EAASP,MACXK,EAAeG,KAAKD,EAASP,OAE7BK,EAAeG,KAAKD,MAgBxB,OACE,qBAAKE,MAAO,CAACC,OAAO,GAAIC,UAAU,mBAAlC,SACE,sBAAKA,UAAU,YAAYC,QAdT,WACtB,IAAIC,EAAiB,CAAChB,EAAWG,EAAOK,EAAgBN,GACpDc,EAAe,KAAOnB,EAAY,KACpCQ,EAAeW,GACXC,OAAOC,OAAOC,MAAQ,KACxBvB,GAAa,SAAAwB,GAAS,OAAKA,MAG/BtB,GAAW,IAMP,UACE,oBAAIgB,UAAW,YAAaO,YAAY,EAAxC,SAGElB,IAEF,uBACA,wBAAQS,MAAO,CAACC,OAAO,GAAIC,UAAU,MAAMC,QAAS,WAAOX,EAAWF,IAAtE,SACE,mBAAGY,UAAU,0CCQRQ,EA9CG,SAAC,GAA0G,IAAzG1B,EAAwG,EAAxGA,aAAc2B,EAA0F,EAA1FA,aAAc1B,EAA4E,EAA5EA,YAAaC,EAA+D,EAA/DA,WAAY0B,EAAmD,EAAnDA,MAAOpB,EAA4C,EAA5CA,WAAYE,EAAgC,EAAhCA,WAAYD,EAAoB,EAApBA,eAGtG,OACE,sBAAOS,UAAY,0EAAnB,UACE,oBAAIF,MAAO,CAACa,MAAM,QAASC,SAAS,QAAYC,SAAS,SAAzD,oBAECH,EAAMI,KAAI,SAACC,GAAD,OAEH,cAAC,EAAD,CACA7B,UAAW6B,EAAK7B,UAChBK,eAAgBA,EAChBH,GAAI2B,EAAKC,IAET3B,MAAO0B,EAAK1B,MACZC,WAAYA,EACZE,WAAYA,EACZC,UAAWsB,EAAK7B,UAChBC,WAAY4B,EAAK5B,WAAa4B,EAAK5B,WAAa,KAChDH,WAAYA,EACZD,YAAaA,EACbD,aAAcA,GARTiC,EAAKC,QAWjBN,EAAMO,OAAS,EACd,wBAAQhB,QAAS,kBAAIQ,GAAa,SAAAH,GAAS,OAAKA,MAAaY,KAAK,SAASC,MAAM,oBAAjF,uBACA,SCZOC,EAjBK,SAAC,GAA0D,IAAzDC,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,qBAAsBC,EAAa,EAAbA,EAAa,EAAVC,MAEhE,OACI,qBAAIzB,UAAU,oEAAd,UACI,qBAAKF,MAAO,CAACc,SAAS,QAASc,SAAS,QAAS1B,UAAU,OAA3D,SAAkE,mBAAGF,MAAO,CAAC6B,OAAO,KAAlB,SAAyBH,MAC3F,uBAAOxB,UAAU,OAAOF,MAAO,CAACe,SAAS,QAASD,SAAS,SAAUM,KAAK,OAAO9B,GAAG,QAAQwC,KAAK,aACjGC,MAAOR,EACPS,SAAU,SAAAN,GAAC,OAAEF,EAAWE,EAAEO,OAAOF,QACjCG,IAAI,aAAaC,IAAI,eAErB,wBAAQhC,QAAS,WAAKsB,EAAqBC,IAAKN,KAAK,SAASlB,UAAU,iBAAxE,SACI,mBAAGA,UAAU,6BCoIdkC,EA5IE,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAapCZ,EAZe,SAAAa,GAGjB,IAFA,IAAIC,EAAaD,EAAKE,MAAM,KACxBf,EAAQ,GACHgB,EAAIF,EAAWtB,OAAQwB,EAAI,EAAIA,IAClCF,EAAWE,EAAE,GAAGD,MAAM,IAAIvB,OAAS,EACrCQ,EAAM5B,KAAN,WAAe0C,EAAWE,EAAE,KAE5BhB,EAAM5B,KAAK0C,EAAWE,EAAE,IAG5B,OAAOhB,EAAMiB,KAAK,KAERC,EAAW,IAAIC,MAAOC,mBAAmB,UAErD,EAA0BC,mBAAS,IAAnC,mBAAOzD,EAAP,KAAc0D,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOlD,EAAP,KAAiBoD,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAO3D,EAAP,KAAmB8D,EAAnB,KACA,EAA8BH,mBAASrB,GAAvC,mBAAOJ,EAAP,KAAgBC,EAAhB,KACA,EAAkCwB,qBAAlC,mBAAOI,EAAP,KAAkBC,EAAlB,KAyCM5B,EAAuB,SAACC,GAC5B,IAAI4B,EAAgB,GACpBjE,EAAWQ,SAAQ,SAAA8C,GACjB,GAAIA,IAAMjB,EAGR,OAAO,KAFP4B,EAAcvD,KAAK4C,MAKvBQ,EAAcG,IAIhB,OACE,uBAAOpD,UAAU,WAAWqD,SArDT,SAAA7B,GAEnB,GADAA,EAAE8B,iBACW,KAAVjE,EAED,OADA8D,EAAa,0BACN,KAEPhB,EAAQ,CAAC9C,QAAOF,WAAWA,IAE3BgE,EAAa,IACbJ,EAAS,IACTE,EAAc,IACdD,EAAY,MA0Cd,UACE,sBAAKhD,UAAU,cAAf,UACE,oBAAIuD,QAAQ,QAAZ,8BACA,uBAAOA,QAAQ,QAAf,wBACA,uBACEnE,GAAG,QACHY,UAAU,eACVkB,KAAK,OACLW,MAAOxC,EACPyC,SAAU,SAAAN,GAAC,OAAIuB,EAASvB,EAAEO,OAAOF,aAIrC,oBAAI7B,UAAU,kBAAd,SACCb,EAAW2B,KAAI,SAACU,GAAD,OACZ,cAAC,EAAD,CACAH,QAASA,EACTC,WAAYA,EACZE,EAAGA,EACHC,MAAOA,EACPF,qBAAsBA,SAQ1B,sBAAMvB,UAAU,4BAAhB,UACE,uBACIF,MAAOsC,EAAc,GAAK,CAACoB,QAAQ,QACnCpE,GAAG,QACHY,UAAU,oBACVkB,KAAK,OACLW,MAAOjC,EACPkC,SAAU,SAAAN,GAAC,OAAIwB,EAAYxB,EAAEO,OAAOF,UAG1C,wBAAS5B,QAxEe,WAE1B,GAAgB,KAAbL,EAED,OADAuD,EAAa,mCACN,KAEPA,EAAa,IACbF,EAAc,GAAD,mBAAK9D,GAAL,CAAiBS,KAC9BoD,EAAY,IACZX,GAAgBD,IA+DwBlB,KAAK,SAASpB,MAAOsC,EAAc,GAAK,CAACoB,QAAQ,QAASxD,UAAU,0BAA5G,SACE,mBAAGA,UAAU,8BAEf,wBAAQC,QA7DgB,WAC1BoC,GAAgBD,IA4DwBlB,KAAK,SAASpB,MAAOsC,EAAc,GAAK,CAACoB,QAAQ,QAASxD,UAAU,0BAA1G,SACE,mBAAKA,UAAU,iCAKjB,wBAAQC,QArFc,WACxBoC,GAAgBD,IAoFuBlB,KAAK,SAASpB,MAAOsC,EAAc,CAACoB,QAAQ,QAAU,GAAIxD,UAAU,iBAAzG,SACE,mBAAIyD,YAAA,EAASC,WAAU,cAAe1D,UAAU,yBAGlD,cAAC,IAAD,CAAcZ,GAAG,cAAeY,UAAU,yBAAyB2D,MAAM,QAAQC,OAAO,QAAxF,0BAIA,qBAAI9D,MAAO,CAAC+D,UAAU,SAAUC,SAAS,OAAOnD,MAAM,MAAOgB,OAAO,cAApE,cAAqFuB,EAArF,OACA,uBACEpD,MAAO,CAACiE,aAAa,QACrB/D,UAAU,uBACVkB,KAAK,SACLW,MAAM,gBC7CCmC,G,MAxFE,SAAC,GAAiF,IAA/EC,EAA8E,EAA9EA,YAAajF,EAAiE,EAAjEA,WAAYkF,EAAqD,EAArDA,QAASnF,EAA4C,EAA5CA,YAAcQ,EAA8B,EAA9BA,eAAgB4E,EAAc,EAAdA,UAChF,EAA8BrB,mBAAS/D,EAAY,IAAnD,mBAAOqF,EAAP,KAAgBC,EAAhB,KACA,EAA0CvB,mBAAS/D,EAAY,IAA/D,mBAAOqE,EAAP,KAAsBkB,EAAtB,KAEA,SAASC,IACLvF,GAAW,SAAAsB,GAAS,OAAKA,KACzB+D,EAAWtF,EAAY,IAc3B,OAjBGqE,IAAkBrE,EAAY,IAAIuF,EAAiBvF,EAAY,IAkBlE,qBAAKiB,UAAWmE,EAAY,oCAAsC,mCAAlE,SACI,uBAAMnE,UAAU,WAAhB,UACI,qBAAIA,UAAU,6BAAd,UACI,sBAAKA,UAAU,kCAAf,UACI,uBACAF,MAAOoE,EAAU,CAACV,QAAQ,QAAU,CAACnD,MAAM,OAC3CwB,MAAOuC,EACPpE,UAAU,WACV8B,SAAWoC,EAA2B,KAbtD,SAAsB1C,GAClB6C,EAAW7C,EAAEO,OAAOF,UAcR,sBAAM/B,MAAOoE,EAAU,GAAK,CAACV,QAAQ,QAArC,SACCzE,EAAY,KAEb,gCACI,wBAAQkB,QAASsE,EAAjB,SACI,mBAAGzE,MAAOoE,EAAU,CAACvD,MAAM,QAAU,CAACA,MAAM,OAAQX,UAAYkE,EAAiC,aAAvB,yBAE9E,wBAAQjE,QA7B5B,WACIsE,IACIxF,EAAY,KAAOqF,GAAWrF,EAAY,KAAOqE,GACjDa,EAAYlF,EAAY,GAAIqF,EAAShB,IA0BMtD,MAAOoE,EAAU,CAACV,QAAQ,QAAU,GAAnE,SACI,mBAAG1D,MAAO,CAACa,MAAM,kBAAmBX,UAAU,oCAI1D,oBAAIA,UAAU,uBAAd,SACC,IAAI4C,KAAK7D,EAAY,IAAI8D,mBAAmB,cAGjD,qBAAK7C,UAAU,kBAAf,SAC+B,IAA1BjB,EAAY,GAAGkC,OAChB,oBAAIjB,UAAU,kCAAd,SACKjB,EAAY,GAAG+B,KAAI,SAAAlB,GAAQ,OACxB,oBAAKI,UAAU,mBAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,mBAAGA,UAAU,YAAb,SAA0BJ,IAC1B,mBAAGI,UAAU,gBAAb,2BAEJ,sBAAKA,UAAU,uBAAf,UACI,wBAASA,UAAU,0BAAnB,SACG,mBAAGA,UAAU,8BAEhB,wBAAQA,UAAU,0BAAlB,SACG,mBAAGA,UAAU,2CAOpC,sBAAKA,UAAU,mDAAf,UACI,oBAAIF,MAAO,CAAC+D,UAAU,SAAUlC,OAAO,IAAKhB,MAAM,QAAlD,2BACA,wBAAQb,MAAO,CAAE0E,WAAW,UAAWxE,UAAU,iEAAjD,SACI,mBAAGA,UAAU,6BAKzB,wBAEA,wBAAQC,QAAS,kBAAMV,GAAe,IAAQO,MAAQf,EAAiC,GAAnB,CAACyE,QAAQ,QAAcxD,UAAU,yBAArG,gCCmGGyE,EAzKH,WAEV,MAA8B3B,oBAAS,GAAvC,mBAAOoB,EAAP,KAAgBlF,EAAhB,KAIA,EAA0B8D,mBAAS,IAAnC,mBAAOpC,EAAP,KAAcgE,EAAd,KACA,EAAsC5B,oBAAS,GAA/C,mBAAO/D,EAAP,KAAoBQ,EAApB,KAGA,EAAkCuD,mBAAS,EAAC,IAA5C,mBAAOqB,EAAP,KAAkBrF,EAAlB,KACA,EAAkCgE,mBAAS,EAAC,IAA5C,mBAAO6B,EAAP,KAAkBlE,EAAlB,KACA,EAAsCqC,oBAAS,GAA/C,mBAAOV,EAAP,KAAoBC,EAApB,KAQAuC,qBAAU,WACRC,IAAMC,IAAI,iBACPC,MAAK,SAAAC,GACJN,EAASM,EAAIC,KAAKC,eAErB,CAACnG,IAIJ,IAsDMoG,EAAsB,WAC1BrG,GAAa,SAAAwB,GAAS,OAAKA,KACvBqE,GACFS,KAIEA,EAAmB,WACvB3E,GAAa,SAAAH,GAAS,OAAKA,KACxB8B,GACDC,GAAe,SAAA/B,GAAS,OAAKA,KAE5B6D,GACDgB,KAiBJ,OACE,8BACE,uBAAMnF,UAAU,kCAAhB,UACI,qBAAMA,UAAWmE,EAAY,uBAAyB,sBAAtD,SACQ,cAAC,EAAD,CACAzD,MAAOA,EACPpB,WA/CG,SAACF,GAChByF,IAAMQ,OAAO,iBAAmBjG,GAC/B2F,MAAK,SAAAC,GACJ,IAAMM,EAAW5E,EAAM6E,QAAO,SAAAxE,GAAI,OAAIA,EAAKC,MAAQ5B,KACnDsF,EAASY,GACT/F,GAAe,OA2CLC,WAlFG,SAACJ,EAAIC,EAAOmG,GAC7B,IAAMC,EAAc,CAClBpG,MAAOA,EACPmG,KAAMA,GAERX,IAAMa,IAAI,iBAAmBtG,EAAIqG,GAC9BV,MAAK,SAAAC,GACJ,IAAMM,EAAW5E,EAAMI,KAAI,SAAAC,GAAI,OAC7BA,EAAK3B,KAAOA,EAAKqG,EAAc1E,KAEjC2D,EAASY,OAyEC/F,eAAgBA,EAChBP,WAAYA,EACZD,YAAaA,EACb0B,aAAcA,EACd3B,aAAcA,MAGtB,qBACMkB,UAAY2E,EAAY,uBAAyB,sBADvD,SAEQ,cAAC,EAAD,CACAvC,YAAaA,EACbC,eAAgBA,EAChBF,QAxGA,SAAApB,GACd8D,IAAMc,KAAK,gBAAiB5E,GACzBgE,MAAK,SAAAC,GACJ,IAAMM,EAAQ,CAAKN,EAAIC,MAAT,mBAAiBvE,IAC/BgE,EAASY,WAuGP,gCACE,wBAAQrF,QAASmF,EAAkBlE,KAAK,SAASlB,UAAU,kBAC3DF,MAAO6E,EAAY,GAAK,CAAChE,MAAM,OAC/B8C,YAAA,EAASC,WAAU,IAFnB,SAGA,mBAAI1D,UAAU,oBAAoBF,MAAO6E,EAAY,CAACiB,WAAW,OAAS,CAACA,WAAW,MAAOC,UAAU,qBAEvG,cAAC,IAAD,CAAezG,GAAG,IAAKY,UAAU,yBAAyB2D,MAAM,QAAQC,OAAO,QAA/E,SACGe,EAAY,YAAc,WAE7B,wBAAQzD,KAAK,SAASlB,UAAU,cAAcC,QAASkF,EAAqBrF,MAAO,CAAC8F,WAAW,MAA/F,SACA,mBAAG9F,MAAOqE,EAAY,CAACyB,WAAW,OAAQ,CAACA,WAAW,MAAOC,UAAU,kBACvE7F,UAAU,6BAITjB,EAID,cAAC,EAAD,CACAC,WAAYA,EACZkF,QAASA,EACTC,UAAWA,EACXpF,YAAaA,EACbQ,eAAgBA,EAChB0E,YA5DU,SAAC7E,EAAI0G,EAAU1C,GACjC,IAAI2C,EAAS,CACX1G,MAAMyG,EACN3G,WAAWiE,GAEbyB,IAAMa,IAAN,uBAA0BtG,GAAM2G,GAC7BhB,MAAK,SAAAC,GACJN,GAAS,SAAApE,GAAS,OAAIA,EAAUQ,KAAI,SAAAkF,GAAK,OAAIA,EAAMhF,MAAQ5B,EAAK2G,EAAWC,QAC3EzG,EAAe,CAAC,IAAIqD,KAAQkD,EAAU1C,EAAehE,UA4CjD,oBAAIY,UAAWmE,EAAY,6CAA+C,4CAA1E,sCC1JG8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEI,cAAC,EAAD,MAGJC,SAASC,eAAe,SAQ1BZ,M","file":"static/js/main.e8cd58d2.chunk.js","sourcesContent":["const Note = ({setSideBarOn, mainContent, setActualText, setEditing, createdAt, activities, id, title,  removeNote, updateNote, updatedAt, setMainContent}) => {\r\n\r\n\r\n//TODO:Put edit function in the mainNote\r\n\r\n//TODO: limit date system \r\n//let today = (new Date(createdAt).getDate() + 1)+ \"/\" +  (new Date(createdAt).getMonth()+ 1)  \r\n\r\n//Acitvities list for the render\r\nlet activitiesList = []\r\nif (activities) {\r\n  activities.forEach(activity =>{\r\n    if (activity.title) {\r\n      activitiesList.push(activity.title)\r\n    }else{//inessesarie line\r\n      activitiesList.push(activity)\r\n    }\r\n  }) \r\n}\r\nconst handleCardClick = ()=>{\r\n  let newMainContent = [createdAt, title, activitiesList, id]\r\n  if (newMainContent[3] !== mainContent[3]) {\r\n    setMainContent(newMainContent)\r\n    if (window.screen.width > 700) {\r\n      setSideBarOn(prevState => !prevState)\r\n    }\r\n  }\r\n  setEditing(true)\r\n};\r\n\r\n  // render \r\n  return (\r\n    <div style={{zIndex:0}} className=\"note card col-10\">\r\n      <div className=\"card-body\" onClick={handleCardClick} >\r\n        <h2 className={\"noteTitle\"} spellCheck={false}\r\n          //edit funtion => disabled={!editable}\r\n          //edit funtion => onChange={(e) => setTitle(e.target.value)}\r\n        >{title}\r\n        </h2>\r\n        <br />\r\n        <button style={{zIndex:2}} className=\"btn\" onClick={() => {removeNote(id);}}>\r\n          <i className=\"text-danger fa fa-trash fa-lg\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;","import React from 'react';\r\nimport Note from './Note';\r\n\r\nconst NotesList = ({setSideBarOn, setAddNoteOn, mainContent, setEditing, notes, removeNote, updateNote, setMainContent}) => {\r\n  // render JSX\r\n\r\n  return (\r\n    <div   className = \" gap-2 p-1 d-flex justify-content-center flex-column align-items-center\" >\r\n      <h2 style={{color:'white', maxWidth:300 + 'px', minWidth:300 + 'px'}}>Groups</h2>\r\n\r\n      {notes.map((note)=>(\r\n          \r\n              <Note \r\n              createdAt={note.createdAt}\r\n              setMainContent={setMainContent}\r\n              id={note._id}\r\n              key={note._id}\r\n              title={note.title}\r\n              removeNote={removeNote}\r\n              updateNote={updateNote}\r\n              updatedAt={note.createdAt}\r\n              activities={note.activities ? note.activities : null }\r\n              setEditing={setEditing}\r\n              mainContent={mainContent}\r\n              setSideBarOn={setSideBarOn}\r\n              />\r\n      ))}\r\n      {notes.length < 3 \r\n      ? <button onClick={()=>setAddNoteOn(prevState => !prevState)}  type=\"button\" class=\"addFirstGroupBtn \">Add Group</button>\r\n      : null\r\n      }\r\n    </div>\r\n  );\r\n};\r\n/*\r\n         <div className='d-flex flex-column w-100 justify-content-center align-items-center'>\r\n          <h2 style={{color:'grey'}}>13/06</h2> \r\n          <Note \r\n          setMain={setMain}\r\n          id={note._id}\r\n          key={note._id}\r\n          initialTitle={note.title}\r\n          initialText={note.text}\r\n          removeNote={removeNote}\r\n          updateNote={updateNote}\r\n          updatedAt={note.createdAt}\r\n          />\r\n          </div>\r\n*/ \r\nexport default NotesList;","const NewActivity = ({dateFor, setDateFor, handleDeleteActivity, e, today}) =>{  \r\n    \r\n    return (\r\n        <li className='d-flex align-items-center justify-content-between list-group-item'>\r\n            <div style={{maxWidth:'100px', overflow:'auto'}} className='mx-1'><p style={{margin:'0'}}>{e}</p></div>\r\n            <input className='mx-1' style={{minWidth:'135px', maxWidth:'135px'}} type=\"date\" id=\"start\" name=\"trip-start\"\r\n            value={dateFor}\r\n            onChange={e=>setDateFor(e.target.value)}\r\n            min=\"2005-15-03\" max=\"2022-12-31\">\r\n            </input>\r\n            <button onClick={()=>{handleDeleteActivity(e)}} type='button' className='removeActivity'>\r\n                <i className='fa fa-minus-square'></i>\r\n            </button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default NewActivity;","import React, { useState } from 'react';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport NewActivity from './NewActivity.js';\r\nconst NoteForm = ({ addNote, addActivity, setAddActivity }) => {\r\n  const formatDate = date =>{\r\n    let todayArray = date.split('/')\r\n    let today = [];\r\n    for (let i = todayArray.length; i > 0 ; i--) {\r\n      if (todayArray[i-1].split(\"\").length < 2) {\r\n        today.push(`0${todayArray[i-1]}`)\r\n      }else{\r\n        today.push(todayArray[i-1]);\r\n      }\r\n    }\r\n    return today.join('-');\r\n  }\r\n  let today = formatDate(new Date().toLocaleDateString(\"es-AR\"))\r\n  // state hooks para el form\r\n  const [title, setTitle] = useState('');\r\n  const [activity, setActivity] = useState(''); \r\n  const [activities, setActivities] = useState([]);\r\n  const [dateFor, setDateFor] = useState(today)\r\n  const [formError, setFormError] = useState()\r\n  // handler para el submit\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if(title === ''){\r\n      setFormError('The group need a name!')\r\n      return null;\r\n    }else{\r\n      addNote({title, activities:activities});\r\n      // blanquear formulario\r\n      setFormError('')\r\n      setTitle(''); \r\n      setActivities([ ])\r\n      setActivity(' ')\r\n    }\r\n  };\r\n  \r\n  const addActivityHandle = () =>{\r\n    setAddActivity(!addActivity)\r\n  }\r\n  \r\n  const checkActivityHandle = () =>{\r\n    \r\n    if(activity === ''){\r\n      setFormError('The activity needs information!')\r\n      return null;\r\n    }else{\r\n      setFormError('')\r\n      setActivities([...activities, activity])\r\n      setActivity('')\r\n      setAddActivity(!addActivity)\r\n    }\r\n\r\n  }\r\n  \r\n  const resetActivityHandle = () =>{\r\n    setAddActivity(!addActivity)\r\n  };\r\n\r\n\r\n\r\n  const handleDeleteActivity = (e) =>{\r\n    let newActivities = [ ]\r\n    activities.forEach(i=>{\r\n      if (i !== e) {\r\n        newActivities.push(i)\r\n      }else{\r\n        return null;\r\n      }\r\n    });\r\n    setActivities(newActivities)\r\n  }\r\n\r\n  // render JSX\r\n  return (\r\n    <form  className=\"noteForm\" onSubmit={handleSubmit}  >\r\n      <div className=\"form-group \">\r\n        <h2 htmlFor=\"title\">Create New Group</h2>\r\n        <label htmlFor=\"title\">Group Name</label>\r\n        <input\r\n          id=\"title\"\r\n          className=\"form-control\"\r\n          type='text'\r\n          value={title}\r\n          onChange={e => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <ul className=\"list-group my-2\">\r\n      {activities.map((e)=>(\r\n          <NewActivity\r\n          dateFor={dateFor}\r\n          setDateFor={setDateFor}\r\n          e={e}\r\n          today={today}\r\n          handleDeleteActivity={handleDeleteActivity}\r\n          />\r\n      ))}\r\n\r\n      </ul>\r\n\r\n\r\n      \r\n      <div  className=\"d-flex align-items-center\">\r\n        <input\r\n            style={addActivity ? {} : {display:'none'}}\r\n            id=\"title\"\r\n            className=\"form-control w-75\"\r\n            type='text'\r\n            value={activity}\r\n            onChange={e => setActivity(e.target.value)}\r\n          />\r\n\r\n      <button  onClick={checkActivityHandle}  type='button' style={addActivity ? {} : {display:'none'}} className=\"addActivityBtnContainer\">\r\n        <i className=\"fa fa-check-square mx-1\"></i>\r\n      </button >\r\n      <button onClick={resetActivityHandle} type='button' style={addActivity ? {} : {display:'none'}} className=\"addActivityBtnContainer\">\r\n        <i   className=\"fa fa-minus-square mx-1\"></i>\r\n      </button>\r\n\r\n        \r\n      </div>\r\n      <button onClick={addActivityHandle}  type=\"button\" style={addActivity ? {display:'none'} : {}} className=\"addActivityBtn\" >\r\n        <i  data-tip data-for={\"registerTip\"} className=\" fa fa-plus-square\" ></i>\r\n      </button>\r\n\r\n      <ReactTooltip id=\"registerTip\"  className=\"addActivityTooltip p-1\" place=\"right\" effect=\"solid\">\r\n        Add Activity\r\n      </ReactTooltip>\r\n      \r\n      <h6 style={{textAlign:'center', fontSize:'13px',color:'red', margin:'10px 0 0 0'}}> {formError} </h6>\r\n      <input\r\n        style={{marginBottom:'10px'}}\r\n        className=\"btn btn-primary mt-3\"\r\n        type=\"submit\"\r\n        value=\"Guardar\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NoteForm;","import { main } from '@popperjs/core';\r\nimport React, { useState} from 'react';\r\n\r\n\r\nconst MainNote = ( {uploadGroup, setEditing, editing, mainContent , setMainContent, sideBarOn} )=>{\r\n    const [newText, setNewText] = useState(mainContent[1])\r\n    const [newActivities, setNewActivities] = useState(mainContent[2])  \r\n    if(newActivities !== mainContent[2]) setNewActivities(mainContent[2])\r\n    function editingToggle(){\r\n        setEditing(prevState => !prevState)\r\n        setNewText(mainContent[1])\r\n    }\r\n\r\n    function handleUpload(){\r\n        editingToggle()\r\n        if (mainContent[1] !== newText || mainContent[2] !== newActivities) {\r\n            uploadGroup(mainContent[3], newText, newActivities)\r\n        }\r\n    }\r\n\r\n    function handleChange(e){\r\n        setNewText(e.target.value)\r\n    }\r\n\r\n    return (\r\n    <div className={sideBarOn ? 'overflow-hidden w-100 mainNoteOff' : 'overflow-hidden w-100 mainNoteOn'}>\r\n        <main className='mainNote'>\r\n            <h3 className=\" card overflow-hidden w-75\" >\r\n                <div className='d-flex  flex-wrap overflow-auto'>\r\n                    <input\r\n                    style={editing ? {display:'none'} : {width:'50%'}}\r\n                    value={newText}\r\n                    className='carlitos'\r\n                    onChange={!editing ? (handleChange) : null}\r\n                    />\r\n                    <span style={editing ? {} : {display:'none'}}>\r\n                    {mainContent[1]}\r\n                    </span>\r\n                    <div >\r\n                        <button onClick={editingToggle}>\r\n                            <i style={editing ? {color:'grey'} : {color:'red'}} className={!editing ? \"fa fa-minus-square\" : \"fa fa-edit\"}></i>\r\n                        </button>\r\n                        <button onClick={handleUpload} style={editing ? {display:'none'} : {}} >\r\n                            <i style={{color:'rgb(0, 255, 0)'}} className=\"fa fa-check-square mx-1\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <h6 className=\"mainNoteCreationDate\">\r\n                {new Date(mainContent[0]).toLocaleDateString(\"es-AR\")} \r\n                </h6>\r\n            </h3>\r\n            <div className='mainNoteContent'>\r\n                {mainContent[2].length !== 0 ?                 \r\n                <ul className=\" mainNoteContentList list-group\"> \r\n                    {mainContent[2].map(activity=>(\r\n                        <li  className=\"list-group-item \"> \r\n                            <div className='activityContainer'>\r\n                                <div className='activityText'>\r\n                                    <p className=' activity'>{activity}</p>\r\n                                    <p className=' activityDate' >13/07/2021</p>\r\n                                </div>\r\n                                <div className='activityBtnContainer'>\r\n                                    <button  className=\"addActivityBtnContainer\">\r\n                                       <i className=\"fa fa-check-square mx-1\"></i>\r\n                                    </button > \r\n                                    <button className=\"addActivityBtnContainer\">\r\n                                       <i className=\"fa fa-minus-square mx-1\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    ))} \r\n                </ul> : \r\n                <div className='d-flex justify-content-center align-items-center'>\r\n                    <h5 style={{textAlign:'center', margin:'0', color:'gray'}}>Any Acvtivity</h5>\r\n                    <button style={{ alignItems:'center'}} className='addActivityBtn alig-items-center d-flex justify-content-center'>\r\n                        <i className='fa fa-plus-square'></i>\r\n                    </button>\r\n                </div>}\r\n                \r\n            </div>\r\n            <div>\r\n            </div>\r\n            <button onClick={() => setMainContent(false)} style={!mainContent ? {display:\"none\"} : {}} className='mainBtn btn btn-danger' >\r\n            Close Group\r\n            </button>\r\n            \r\n        </main>\r\n    </div>\r\n)}\r\n\r\n\r\nexport default MainNote","// imports\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactTooltip from 'react-tooltip';\n\n//import Header from './Header';\nimport NotesList from './components/NotesList';\nimport NoteForm from './components/NoteForm';\n//import Footer from './Footer';\nimport './App.css'\nimport MainNote from './components/MainNote';\n\n\nconst App = () => {\n\n  const [editing, setEditing] = useState(true)\n\n\n  // useStates for the NoteList and The MainContent\n  const [notes, setNotes] = useState([]);\n  const [mainContent, setMainContent] = useState(false) \n\n  // useStates for bars and btn´s\n  const [sideBarOn, setSideBarOn] = useState([true])\n  const [addNoteOn, setAddNoteOn] = useState([true])\n  const [addActivity, setAddActivity] = useState(false)\n  \n\n  //\n\n\n\n  // useEffect hook\n  useEffect(() => {\n    axios.get('/api/todolist')\n      .then(res => {\n        setNotes(res.data.toDoList);\n      });\n  }, [mainContent]);\n\n  // CRUD functions\n  // create\n  const addNote = note => {\n    axios.post('/api/todolist', note)\n      .then(res => {\n        const newNotes = [ res.data,...notes];\n        setNotes(newNotes);\n      });\n  };\n\n  // edit\n  const updateNote = (id, title, text) => {\n    const updatedNote = {\n      title: title,\n      text: text\n    };\n    axios.put('/api/todolist/' + id, updatedNote)\n      .then(res => {\n        const newNotes = notes.map(note =>\n          note.id === id ? updatedNote : note\n        );\n        setNotes(newNotes);\n      });\n  };\n    \n/*\nTODO:Edits activities in a To Do Note\n\n*/\n  /*\nconst updateActivities = (id, title, activities) => {\n  const updatedNote = {\n    title: title,\n    activities: activities\n  };\n  axios.put('/api/todolist/' + id, updatedNote)\n    .then(res => {\n      const newNotes = notes.map(note =>\n        note.id === id ? updatedNote : note\n      );\n      setNotes(newNotes);\n    });\n};\n*/\n  // remove\n  const removeNote = (id) => {\n      axios.delete('/api/todolist/' + id)\n      .then(res => {\n        const newNotes = notes.filter(note => note._id !== id);\n        setNotes(newNotes);\n        setMainContent(false);\n    });\n    \n  };\n\n  // Handle clock from open the note list bar\n  const handleNoteListClick = ()=>{\n    setSideBarOn(prevState =>(!prevState))\n    if(!addNoteOn){\n      handleAddNoteBtn()\n    }\n\n  }\n  const handleAddNoteBtn = () =>{\n    setAddNoteOn(prevState =>(!prevState))\n    if(addActivity){\n      setAddActivity(prevState =>(!prevState))\n    }\n    if(sideBarOn){\n      handleNoteListClick()\n    }\n  }\n\n  //Update group function\n  const uploadGroup = (id, newTitle, newActivities) =>{\n    let newGroup={\n      title:newTitle,\n      activities:newActivities\n    }\n    axios.put(`api/todolist/${id}`, newGroup)\n      .then(res=>{\n        setNotes(prevState => prevState.map(group => group._id === id ? newGroup : group))\n        setMainContent([new Date(), newTitle, newActivities, id])\n\n      })\n  }\n  return (\n    <div>\n      <main className=\"d-flex overflow-hidden flex-row\">\n          <div  className={sideBarOn ? \"noteListContainerOff\" : \"noteListContainerOn\" }>\n                  <NotesList \n                  notes={notes} \n                  removeNote={removeNote} \n                  updateNote={updateNote} \n                  setMainContent={setMainContent} \n                  setEditing={setEditing}\n                  mainContent={mainContent}\n                  setAddNoteOn={setAddNoteOn} \n                  setSideBarOn={setSideBarOn}\n                  />  \n          </div>\n          <div  \n                className= {addNoteOn ? \"noteFormContainerOff\" : \"noteFormContainerOn\"}>\n                  <NoteForm \n                  addActivity={addActivity}\n                  setAddActivity={setAddActivity} \n                  addNote={addNote} \n                  />\n          </div>\n          <div>\n            <button onClick={handleAddNoteBtn} type=\"button\" className=\"addNoteBtn mt-1\" \n            style={addNoteOn ? {} : {color:\"red\"}}\n            data-tip data-for={\"a\"}  >\n            <i  className=\"fa fa-plus-square\" style={addNoteOn ? {transition:'.9s'} : {transition:'.9s', transform:\"rotate(45deg)\"}}></i>\n            </button>\n            <ReactTooltip  id=\"a\"  className=\"addActivityTooltip p-1\" place=\"right\" effect=\"solid\">\n              {addNoteOn ? 'Add Group' : 'Cancel'}\n            </ReactTooltip>\n            <button type=\"button\" className=\"sideBarBtn \" onClick={handleNoteListClick} style={{transition:\"2s\"}}>\n            <i style={sideBarOn ? {transition:\".8s\"}: {transition:\".8s\", transform:\"rotate(180deg)\"}} \n            className=\"fa fa-chevron-right\"></i>\n            </button>\n          </div>\n          {\n            !mainContent \n            ? \n            <h2 className={sideBarOn ? 'overflow-hidden w-100 mainNoteOff anyGroup' : 'anyGroup overflow-hidden w-100 mainNoteOn'}>Any Group Selected</h2> \n            :\n            <MainNote \n            setEditing={setEditing} \n            editing={editing} \n            sideBarOn={sideBarOn}  \n            mainContent={mainContent} \n            setMainContent={setMainContent} \n            uploadGroup={uploadGroup}\n            />\n          }\n      </main>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n      <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}